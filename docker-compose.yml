version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: canna-postgres
    environment:
      POSTGRES_DB: canna_visits
      POSTGRES_USER: canna_user
      POSTGRES_PASSWORD: canna_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - canna-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U canna_user -d canna_visits"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Application Server
  app:
    build: .
    container_name: canna-app
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://canna_user:canna_password_change_in_production@postgres:5432/canna_visits
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      FRONTEND_URL: http://localhost:3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - canna-network
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: canna-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - canna-network
    restart: unless-stopped

volumes:
  postgres_data:
  uploads_data:

networks:
  canna-network:
    driver: bridge